# 
# This Docker Compose file is used to define and configure the backend for the application.
# It consists of four services: server-a, mongodb, rapid-runner-rabbit and server-b.
# 
# server-a is built using Dockerfile located in the 'backend/server-a' directory.
# Uses port 3001 of which the frontend will connect to.
# Is dependent on the mongodb and rapid-runner-rabbit services and it has to wait till rapid-runner-rabbit is available before starting.
# 
# The 'mongodb' service uses the latest 'mongo' image.
# Only server-a uses MongoDB to maintain service isolation.
# Maps port 27017 on the host to port 27017 in the container for management purposes.
# Creates a volume named 'mongodb_data' to persist the database data.
# 
# The 'rapid-runner-rabbit' service uses the 'rabbitmq:3-management-alpine' image.
# Exposes ports 5672 and 15672.
# Both server-a and server-b uses this service as a message broker.
# Performs a health check to ensure the service is running.
# 
# server-b is built using the Dockerfile located in the 'backend/server-b' directory.
# Uses port 3002.
# Is dependent on the rapid-runner-rabbit service and it has to wait till it's available before starting.
# 
# The 'backend' network is created as a bridge network to connect the services.
# 
# The 'mongodb_data' volume is used to persist the MongoDB data.
# 

version: '3.4'

services:
  server-a:
    image: ${GROUP_NAME}/${DOCKER_IMAGE_NAME}:${VERSION}
    build:
      context: backend/server-a
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 3001:3001
    networks:
      - backend
    depends_on:
      - mongodb
      - rapid-runner-rabbit
    command: ["sh", "-c", "./utils/wait-for-it.sh rapid-runner-rabbit:5672 && npm run init-db && npm start"]

  mongodb:
    image: mongo:latest
    ports:
    - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    networks:
      - backend

  rapid-runner-rabbit:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    expose:
      - 5672
      - 15672
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
    networks:
      - backend

  server-b:
    image: server-b-image
    depends_on: 
      - rapid-runner-rabbit
    build:
      context: "backend/server-b"
      dockerfile: ./Dockerfile
    expose: 
      - 3002
    networks:
      - backend
    command: ["./utils/wait-for-it.sh", "rapid-runner-rabbit:5672", "--", "npm", "start"]

networks:
  backend:
    driver: bridge

volumes:
  mongodb_data:
